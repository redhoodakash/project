<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxIPEBUTEhEWEhUXFiEZFhYWGRUZFRsaGhgYHxgVGBgZ
        HSkgGhsxJxUVITEhJiorLy4uGCA1ODYsNygtLiv/2wBDAQoKCg4NDhsQEBsrJSAlLS0rKy0rLS8tKy8t
        LS0tLS0tLS0tLS0tLS0tLS0rLS0tLS0tLS0tKy0tLS0tLTctLS3/wAARCAC6AQ8DASIAAhEBAxEB/8QA
        HAABAAIDAQEBAAAAAAAAAAAAAAYHBAUIAwEC/8QATxAAAQMCAwQECAYQAwkBAAAAAQACAwQRBRIhBgcT
        MSJBUWEIFDI1cXOBkRVydKGxsiMzNDZCUlRigpKTs8HD0dIkJaIWF2SDlKPC4eJT/8QAFwEBAQEBAAAA
        AAAAAAAAAAAAAAECA//EACYRAQEAAgIBBAEFAQEAAAAAAAABAhESITEDEzJBYUJRUnGBMyL/2gAMAwEA
        AhEDEQA/ALxREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBER
        AREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBERAREQEREBER
        AREQEREBERAREQEREBERAREQEREBEUWxGnxGle11I4VkZcc8M7mse0HlwpQ2+muj76dasSpSij2B7Tio
        eYnxhkzdHxxu44YesSPY3Kw8tCetSFRZREXMzajEa3FJaWCtna59RKGA1E7WAMdIbdEmws3SwWsceTOW
        XF0yi502hpccwQsllrZS17srXtmklZmAvlc2XuBPLqKke2e1s1ZgFLVMkfBK6fJIYnPj6TWyB2rTfKbA
        27wte340nNdCLnfZnZvGsSp/GIK+TIXFoD6qpa67TY6C4+deuy22OI4biTKWsmkkZxRFLHK7iFuYgNex
        51/CaediD7nt/tU9z8Og0VI79sUqIK2ARVE0QMFyI5JGAnO7UhpFytZR7GbQTRskZVSlr2hzb1koNnAE
        XGbvSYdb2vPvWnQK+EqtoautwPAZZKpxkqWvIYXvMusj2tYS4m5Ave3cq42V2Mq9oRNUSVfkPy5pc0jn
        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
        PUajT2RsutQzcrVSObx8Qa5o7GyPcB2NzusFa+zmBQ4fTNp4AQxvWdXOJ5vceslLZMdRJLct1SO5Y/53
        J6qX94xa7ejhzsPxGpjZpFVBsturyw4j0h7XexysvYbdrJhte6qdVNlBY9uQMLT03A3uXHs7Fs95Ownw
        w2HLK2GSInpOaXAtcNW2BHWGn3rXOcts8Lx0124vzSfXv+hqrvct55b6uT+CuPd/su7CqPxd0olPEc/M
        1paOlbSxJ7FGdhd2EmGVwqXVTJQGublEbmnp9dy4qcp/6Xjentv3w/i4WJQNYZmu/Rddh+d7T7FSdfiD
        qqnoqZty6EPYPTLMXNA9mQexdQbTYSK2jnpi7LxYy0OtfKSOi63XY2Nu5VjgG5iSnqoZpKxkjY5GvLBE
        4F2UggXLzbUBXDOSdmeNt6Wxh9KIIY4m+TGwMHoa0AfQud91NVHDjLXyPbG0CW7nkNbq021Oi6QKpObc
        dM5xPj0epJtwXdZ+Os4Wasq5y7mltDaKjOgrIP2sf9VUXhDfdFJ6qT6zF6U24+Zj2u8ejOVwdbgu1sQb
        eX3KXbyd38mMSQvZUNh4TXNIcwuvmIN9HC3JXHjjlLsvLLGxvdhGh2FUYIuDTRgg8iMg0VI7ujwdomMZ
        0W8aaO35oZLZvo6Lfcr+2dw40lJBTlweYomsLgLA5WgXt1clXtFusngxPx6OrjsKh0ojMbr5XuddmYP5
        2eReymOU7Ljeke3l7W19Fi742VckUP2NwYMtspa3MRdt+YeppvloaabCnzSZc8eUwSaZruc0ZWnrBBOn
        t6lm7wd38WLhr85hnYLNkAzAt55HtuLi9yCCCLlQQblKt2VsmIMLG8hlkdYfmtLrBWXHq+Esy7jYeDw5
        3Bqx+BxGEdmYtdm9tgz5lEd3P3xt9dP9WVXlsns3DhlMIIASL5nud5T3m13ut6ALdQAUM2Z3XyUeJitN
        Ux7Q+R3DEbgfsgfpmzdWbs6k5zdON1Fh4p9ol9W76pVDbgfOTvkzvrxq/auLiRvZe2Zpbf0gi6r3d1u0
        kwiqM76pswMRjytjLTq5pvcuP4vzqY5SY2NZS2xZCp3wh/Jo/jSfRGriUI3lbDvxgQBk7YeEXE5mF98w
        b2OFvJUwust1c5uaZ267zPR+q/8AIqUrUbJ4QaGihpnPEhiZlLgLA6k3tc25rbrN8rPAiIooiIgIiICI
        iAiIgIiICIiAiIgIiICIiAiIgIiICIiAiIgIiICIiAiIgIiICIiAiIgIiICIiAiIgIiICIiAiIgIiICI
        iAiIgIiICIiAiIgIiICIiAiIgIiICIiAiIgIiICIiAiIgIiICIiAiIgIiICIiAiIgIiICIiAiIgIiICI
        iAiIgIiICIiAiIgIiICIiAiIgIiICIiAiIgIiICIiAiIgIiICIiAiIg//9k=
</value>
  </data>
</root>